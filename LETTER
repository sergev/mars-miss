 Добрый день!

>   Интересно, много ли пришлось править?

Вот сводная таблица изменений:

    Всего   Процент   Компонента
    строк   изменений
    --------------------------------
    16700   7% (1200) server
    860     60%       client library
    260     100%      protocol debugger
    1720    60%       executor
    1680    40%       report generator
    550     90%       terminal emulator (+2840 screen library 100%)

А вот собственно изменения, касающиеся самого RQL.
В основном с целью подвинуть его ближе к SQL.
Володя, похоже, будет сильно недоволен моим грубым
вмешательством в сокровенные потроха сервера... :-)

    1) Максимальная длина имени таблицы увеличена с 20 до 30,
       длина имени индекса увеличилась с 4 до 14.
    2) В описании таблицы можно ставить пробел вместо двоеточия:
       (a short, b long) вместо (a:short, b:long).
    3) Альтернативные имена типов CHARACTER, INTEGER, SMALLINT.
    4) Режим доступа READ заменен на SELECT.
    5) У COMMIT и ROLLBACK необязательный аргумент WORK.
    6) Имя команды FETCH изменено на PEEK.
    7) Вместо JOIN можно использовать имя операции SELECT.
    8) Заменена функция Match на рекурсивный вариант, шаблоны теперь
       совместимы с SQL:
       %    любая строка, вместо '?',
       ?    любой символ, вместо '!',
       _    любая последовательность пробелов, как и раньше,
       []   набор символов, как и раньше.
    9) Имя встроенной функции SIZE() заменено на LENGTH(),
       иначе оно конфликтует с полем SIZE таблицы &CATALOG.

А вот список запланированных (было) изменений.
Звездочкой отмечено то, что я уже проделал.
Остальное зависит от Володи, но у него свой взгляд
на дальнейшее развитие, в частности, переход на SQL-2,
так что я пока подожду.

  1) Почему нет номера версии СУБД?  Неудобно править.
  2) Надо бы во все файлы вписать copyright автора.
* 3) Увеличить длину имени таблицы с 20 до 30.
     Иначе сейчас макс. длина имени индекса получается 4.
* 4) Разрешить пробел вместо ':' в задании типов полей таблицы,
     для совместимости с SQL.
* 5) Сделать альтернативные имена типов CHARACTER, INTEGER, SMALLINT
     для совместимости с SQL.
* 6) Режим доступа READ заменить на SELECT
     для совместимости с SQL.
* 7) У COMMIT и ROLLBACK сделать необязательный аргумент WORK
     для совместимости с SQL.
* 8) Изменить имя команды FETCH на что-нибудь уникальное.
     У стандартного SQL есть свой оператор FETCH.
  9) Изменить синтаксис оператора INSERT
     для совместимости с SQL.
     Вместо:
        INSERT (query) INTO tabname
        INSERT VALUES assign, ... INTO tabname
     сделать:
        INSERT INTO tabname [(colname,...)] query
        INSERT INTO tabname [(colname,...)] VALUES (assign, ...)
 10) Изменить синтаксис оператора UPDATE
     для совместимости с SQL.
     Вместо:
        UPDATE tabname [WHERE expr] SET assign, ...
     сделать:
        UPDATE tabname SET assign,... [WHERE expr]
*11) Вместо JOIN использовать имя операции SELECT.
 12) Хорошо бы иметь VIEW
     для совместимости с SQL:
        CREATE  VIEW [(colspec, ...)] AS query
        DROP    VIEW tabref
 13) Доделать создание таблицы по запросу
     для совместимости с SQL:
        CREATE  tabname [(colspec, ...)] AS query
 14) Переделать UNION из префиксной операции в инфиксную
     для совместимости с SQL.
     Вместо:
        UNION a, b, c
     сделать:
        a UNION [ALL] b UNION [ALL]  c
 15) Сделать SQL-подобный оператор SELECT:
     Вместо:
        SELECT subquery,...
        [WHERE expr]
        [FOR colname,...]
     сделать:
        SELECT [ALL | DISTINCT] {expr,... | *}
        FROM subquery,...
        [WHERE expr]
        [GROUP BY colspec,...]
        [HAVING expr]
        [ORDER BY colspec,...]
     Можно иметь совместимый вариант:
        SELECT FROM subquery,...
        [WHERE expr]
        [FOR colname,...]
        [GROUP BY colspec,...]
        [HAVING expr]
        [ORDER BY colspec,...]
     Старые операторы GROUP BY и ORDER BY можно оставить.
*16) Сделать шаблон LIKE совместимым с SQL:
        %       любая строка, вместо '?'
        _       любая последовательность пробелов, как и сейчас
        ?       любой символ, вместо '!'
        []      набор символов, как и сейчас
 17) Маловато интеллекта в определении имени поля по умолчанию.
     Например:
        create atab (a:short);
        create btab (b:short);
        join atab,btab for a: atab.a, b: btab.b;
     А хотелось бы писать:
        join atab,btab for a,b;
     И ничто этому не мешает.
